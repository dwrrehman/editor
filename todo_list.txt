/*







	things to add to make the editor useable full time:


========================= REMAINING REQ. FEATURES ========================





IMPL.
===========

	[ ] 	- make the editor use less globals...? at least alittle bit.

	[ ]	- make textbox use a buffer.

	[ ]	- make the anchor system be stateful, and utilize "recent-cursor" behaviour.

	[ ]  	- make the editor use C11 Atomics instead of mutexes!!!


FILE VIEW:

===========
	
	[ ]	- seperate out path and filename, when saving. 

	[ ]	- - seperate out moving a file, and renaming a file. 
	

CONFIG FILE:
===========

	[ ] 	- read and write to config file to store parameters

	[ ] 	- be able to adjust config parameters within editor using "setparam" command-line command, in my language!


UI:
===========
	[ ] 	- be able to adjust config parameters within editor using "set" command-line command, in my language.
	


DOC:
==================

	[ ] 	- document the new keybinding of the editor in a manual_v2.txt file!



------------------- bugs ----------------------


[bug]			- add word wrap support. 


[bug]			- rework the way the      wrap_width        disabling/dynamic adjusting works. 
**


[bug/feature]		- scrolling down is not very smooth. we should be using the terminal scrolling mode. 
***			use the escape code sequences 
			<ESC>[r    to enable scrolling on the whole screen
			<ESC>[{start};{end}r   to enable scrolling on a range of rows of the screen.
			<ESC>D    to scroll down
			<ESC>M   to scroll up




---------------- features ---------------


**
[feature]	- implement a history for the textbox? oh! just by using multiple lines. of course. beautiful. 
			(note: wrap width is infinity for the textbox)


	

*
[feature]	- determine file format of config file, as a list of commands, that set the values? yes.
		- init parameters from config file, using an rc file that is executed on start up. thats all. 


*
[feature]	- determine language isa for my programming language.    [done]
		- implment my programming language in it. 
		


[delete me!]
[optional]	- (BIG) redesign how we are drawing the screen, to be based on drawing text that is isolated by 
			whitespace, and jumping the (invisible) cursor around the screen, to draw those areas.  
			and clearing the screen before each frame of course,






















------------------- done/fixed -----------------


[FIXED]		- tab width and wrap width major bugs.

[FIXED]		- the performance of our display function is not good. we are currently making an n^2 algorithm in order to draw the screen.


[FIXED]	 	- solve the two slow-unit-fffffff test cases that the fuzzer found. 


[FIXED]		- test how the editor handles unicode characters with the new tab/wrap/display code. 

[FIXED]		- test if the confirmed() code  (ie, overwriting, and discarding file stuff) works.


[FIXED]		- test if the copy paste code is still working. 

[FIXED]		- test if word movement is working

	
SAFETY: [x]	- make an autosave feature, that saves the file to an autosave directory every time it changes. i think. or at least, when theres downtime. yeah. dont do it while typing, obviously. dont wait until user saves to write the file to SOMEWHERE in disk. we need to not loose anything. 


FILE VIEW:
	[x]	- simple file viewer
	[x]	- tab completion for file names



DONE: [optional]	x- rebind the keybindings of the editor. 
**


DONE: [feature]		x - add tab completion for file names, and a small file veiwer, when saving/renaming. 
***

[x] 	- implement a command line, that parses arguments via whitespace..? 
			single char commands only, for built in ones, i think? 













	// todo:   make the textbox actually just a full-on buffer  in its own right
	//         and then thus allow for  different modes,   and also undo redo,  etc. just, dont allow for upward movement, or new lines, though. simple as that.    alsooo keep the way we are rendering the textbox. that can stay. but the actual logic of the textbox should just use the already existing buffer logic. not use its own.  so yeah.   and then we only use the first line, of this "textbox buffer", of course.











	// also i want to implement word wrapping!!!!









	// 	TODO: 
    	//
	// 		redo this behaviour. make it so that you can explicitly disable wrapwidth (not just make it sudo-infinity), 
	// 		or explicitly make it wrap to screen width, and dynamically adjust as the screen width changes!!!
	// 









	todo:   add     restrict    to all pointers that we use!

	





*/
